name: CI/CD Pipeline for user-api

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the Repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Go Environment
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.5  # Use the latest stable version

      # Step 3: Setup SSH Key for EC2
      - name: Setup SSH Key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > ec2-key.pem
          chmod 400 ec2-key.pem

      # Step 4: Pull Latest Code from Git on EC2
      - name: Pull Latest Code from Git
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP '
            set -e
            cd /home/ubuntu/Clean_Arch_CI_CD
            git pull origin main
          '

      # Step 5: Run Tests on EC2
      - name: Run Tests
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP '
            set -e
            cd /home/ubuntu/Clean_Arch_CI_CD
            go mod tidy
            go test ./... -v
          '

      # Step 6: Build the Application on EC2
      - name: Build Application
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP '
            set -e
            cd /home/ubuntu/Clean_Arch_CI_CD
            go build ./cmd/main.go
          '

      # Step 7: Restart Application Service
      - name: Restart Application Service
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP '
            set -e
            sudo systemctl restart user-api.service
            sudo systemctl status user-api.service --no-pager
          '

      # Step 8: Cleanup SSH Key
      - name: Cleanup
        if: always()
        run: |
          rm -f ec2-key.pem
